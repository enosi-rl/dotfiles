export PATH="$HOME/bin:$HOME/.local/bin:/Applications/Docker.app/Contents/Resources/bin/:$PATH"

# Vi mode
set -o vi

##########
# HISTORY
##########

HISTFILE=$HOME/.zsh_history
HISTSIZE=50000
SAVEHIST=50000

# Immediately append to history file:
setopt INC_APPEND_HISTORY

# Record timestamp in history:
setopt EXTENDED_HISTORY

# Expire duplicate entries first when trimming history:
setopt HIST_EXPIRE_DUPS_FIRST

# Dont record an entry that was just recorded again:
setopt HIST_IGNORE_DUPS

# Delete old recorded entry if new entry is a duplicate:
setopt HIST_IGNORE_ALL_DUPS

# Do not display a line previously found:
setopt HIST_FIND_NO_DUPS

# Dont record an entry starting with a space:
setopt HIST_IGNORE_SPACE

# Dont write duplicate entries in the history file:
setopt HIST_SAVE_NO_DUPS

# Share history between all sessions:
setopt SHARE_HISTORY

# Execute commands using history (e.g.: using !$) immediately:
unsetopt HIST_VERIFY

##
## Antidote - package manager
##
# Set the name of the static .zsh plugins file antidote will generate.
zsh_plugins=${ZDOTDIR:-~}/.zsh_plugins.zsh

# Ensure you have a .zsh_plugins.txt file where you can add plugins.
[[ -f ${zsh_plugins:r}.txt ]] || touch ${zsh_plugins:r}.txt

# Lazy-load antidote.
fpath+=(${ZDOTDIR:-~}/.antidote)
autoload -Uz $fpath[-1]/antidote

# Generate static file in a subshell when .zsh_plugins.txt is updated.
if [[ ! $zsh_plugins -nt ${zsh_plugins:r}.txt ]]; then
  (antidote bundle <${zsh_plugins:r}.txt >|$zsh_plugins)
fi

# Source your static plugins file.
source $zsh_plugins

# Use Vim-mode
# bindkey -v

##
## Starship
##
eval "$(starship init zsh)"

# Default toolsets using pkgx
# pkgx install --silent atuin aws aws-vault colima direnv jq docker docker-compose gh terraform terraform-docs
# pkgx install --silent atuin aws aws-vault direnv jq gh terraform terraform-docs

##
## Docker
##
export DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
#export DOCKER_BUILDKIT=1
export DOCKER_DEFAULT_PLATFORM=linux/amd64

# Docker plugins - see https://docs.docker.com/compose/install/linux/#install-the-plugin-manually

##
## Aliases
##
alias cp='cp -i'
alias gd='git diff --color-words'
alias gdtl='git difftool'
alias gl='git log'
alias gp='git pull'
alias gs='git status'
alias gprev='git checkout -'
alias ll='ls -alF'
alias mv='mv -i'
alias rm='rm -i'
alias docker-stop-all='docker container stop $(docker container list -q) && docker container prune -f'
alias cdc='cd ~/code'
alias ij='/Applications/IntelliJ\ IDEA.app/Contents/MacOS/idea'

# Podman
# alias docker=podman

##
## Add AWS auto-complete
##
autoload bashcompinit && bashcompinit
autoload -Uz compinit && compinit
# pkgx doesn't provide a link to the completer :-(
complete -C '/System/Volumes/Data/Users/robert/.pkgx/aws.amazon.com/cli/v2.15.8/venv/bin/aws_completer' aws

##
## zoxide - https://github.com/ajeetdsouza/zoxide
##
# eval "$(zoxide init zsh)"

##
## ripgrep
##
export RIPGREP_CONFIG_PATH=~/.ripgreprc

##
## direnv
##
eval "$(direnv hook zsh)"

##
## pkgx
##
source <(pkgx --shellcode)  #docs.pkgx.sh/shellcode

export ENOSI_COMMON_DIR=~/code/common

##
## Hermit
##
# Generated by Hermit; START; DO NOT EDIT.
HERMIT_ROOT_BIN="${HERMIT_ROOT_BIN:-"$HOME/bin/hermit"}"
eval "$(test -x $HERMIT_ROOT_BIN && $HERMIT_ROOT_BIN shell-hooks --print --zsh)"
# Generated by Hermit; END; DO NOT EDIT.

##
## Enosi
##
export GOPRIVATE=github.com/enosi

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
# export PATH="$PATH:$HOME/.rvm/bin"
export PATH="/opt/homebrew/opt/ruby@3.2/bin:$PATH"
